# Define custom function directory
ARG FUNCTION_DIR="/function"

FROM python:3.10-buster as build-image

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Install build and runtime dependencies
RUN apt-get update && \
  apt-get install -y \
    g++ \
    make \
    cmake \
    unzip \
    git \
    libcurl4-openssl-dev \
    glibc-source \
    wget \
    curl \
    ca-certificates

# Prepare function directory
RUN mkdir -p ${FUNCTION_DIR}

# Update pip
RUN pip install -U pip wheel six setuptools

# Install Python dependencies (to be copied into the function dir)
RUN pip install \
    --target ${FUNCTION_DIR} \
      awslambdaric \
      boto3 \
      redis \
      httplib2 \
      requests \
      numpy \
      scipy \
      pandas \
      pika \
      kafka-python \
      cloudpickle \
      ps-mem \
      tblib \
      delegator.py \
      invoke

FROM python:3.10-buster

ARG FUNCTION_DIR
WORKDIR ${FUNCTION_DIR}

# Copy in the built dependencies
COPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}

# Add Lithops runtime
COPY lithops_lambda.zip ${FUNCTION_DIR}
RUN unzip lithops_lambda.zip \
    && rm lithops_lambda.zip \
    && mkdir handler \
    && touch handler/__init__.py \
    && mv entry_point.py handler/

# Prepare /tmp for tools (nuclei, etc)
ENV HOME="/tmp"
RUN mkdir "/tmp/.config"
RUN chmod -R a+rwx "/tmp"

# Ensure wget, curl, and certs are present
RUN apt-get update && apt-get install -y wget curl ca-certificates

# --- COPY EGET BINARY (already downloaded and extracted) ---
COPY eget /usr/local/bin/eget
RUN chown root:root /usr/local/bin/eget \
    && chmod 755 /usr/local/bin/eget \
    && ls -l /usr/local/bin/eget \
    && /usr/local/bin/eget --help

# --- BUG BOUNTY TOOLS ---
RUN /usr/local/bin/eget projectdiscovery/subfinder --to /usr/local/bin
RUN /usr/local/bin/eget projectdiscovery/httpx --to /usr/local/bin
RUN /usr/local/bin/eget projectdiscovery/nuclei --to /usr/local/bin
RUN /usr/local/bin/eget projectdiscovery/tlsx --to /usr/local/bin
RUN /usr/local/bin/eget projectdiscovery/dnsx --to /usr/local/bin
RUN /usr/local/bin/eget ffuf/ffuf --to /usr/local/bin
RUN /usr/local/bin/eget d3mondev/puredns --to /usr/local/bin

# Extra tools (static nmap, wordlists, nuclei templates, trevorspray) 
RUN git clone https://github.com/0xjbb/static-nmap.git /static-nmap && chmod +x /static-nmap/nmap
RUN curl -o /function/resolvers.txt -LO https://raw.githubusercontent.com/janmasarik/resolvers/master/resolvers.txt
RUN git clone https://github.com/projectdiscovery/nuclei-templates /nuclei-templates
RUN pip install git+https://github.com/blacklanternsecurity/trevorspray

# Optional: binaries from your build context
COPY ./bins/massdns /usr/local/bin/massdns
COPY ./bins/fff /usr/local/bin/fff

ENTRYPOINT [ "/usr/local/bin/python", "-m", "awslambdaric" ]
CMD [ "handler.entry_point.lambda_handler" ]
